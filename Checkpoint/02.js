// 2Ô∏è‚É£ ***** EJERCICIO 2 ***** - calcularIndice() 2Ô∏è‚É£
// En este ejercicio, debemos implementar la funci√≥n calcularIndice, la debe retornar
// un valor num√©rico que es parte de una secuencia de n√∫meros que representa los √≠ndices
// de precios que se aplicar√°n en Henry Market en cada a√±o de actividad.
// La funci√≥n recibir√° por par√°metro el a√±o de actividad del supermercado (valor n√∫m√©rico 0 o mayor),
// y calcular√° el √≠ndice en base a la siguiente secuencia:
//
// - Para el a√±o 0 (n=0) de actividad, el √≠ndice es de 15
// - Para el a√±o 1 (n=1) de actividad, el √≠ndice es 25
// - A partir del a√±o 2, el √≠ndice se calcula con la f√≥rmula f(n-1)+f(n-2)
//
// EJEMPLOS:
// - calcularIndice(0) => 15
// - caluclarIndice(1) => 25
// - calcularIndice(2) => calcularIndice(2-1) + calcularIndice(2-2) => 40
// - calcularIndice(3) => calcularIndice(3-1) + calcularIndice(3-2) => 65
//
// REQUISITOS:
//  üü¢ La funci√≥n debe obtener el √≠ndice hallando de forma recursiva el valor correspondiente a n dentro de la secuencia.
//  üü¢ La funci√≥n debe retornar el valor num√©rico correspondiente a n dentro de la secuencia.
//  üü¢ Si el valor de n recibido por par√°metro es menor a 0, debe retornar false.


// 1.- Qu√© nos llega? Un n√∫mero que representa el a√±o de actividad
// 2.- Qu√© se debe hacer? Calcular de acuerdo al a√±o que se indique el indice 
//     que se obtiene sumando los indices de los dos a√±os inmediato anteriores.
// 3.- C√≥mo proceder?

const calcularIndice = (n) => {
  // Tu c√≥digo aqu√≠:

  if (n<0) return false;        // Si n es negativo devolver falso;
  if (n === 0) return 15;       // Se conoce que el a√±o 0 el indice es 15
  if (n === 1) return 25;       // Se conoce que el a√±o 1 el indice es 25

  return calcularIndice(n-1)+calcularIndice(n-2);
}


// ‚ö†Ô∏è NO MODIFICAR NADA POR DEBAJO DE ESTA L√çNEA ‚ö†Ô∏è
module.exports = {
  calcularIndice
};
